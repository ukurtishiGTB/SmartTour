@model SmartTour.Models.UserRegistrationModel
@{
    ViewData["Title"] = "Register";
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-body p-4">
                    <h2 class="text-center mb-4">Create a new account</h2>
                    <form asp-action="Register" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        
                        <div class="mb-3">
                            <label asp-for="Name" class="form-label">Name</label>
                            <input asp-for="Name" class="form-control" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>
                        
                        <div class="mb-3">
                            <label asp-for="Email" class="form-label">Email</label>
                            <input asp-for="Email" class="form-control" />
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>
                        
                        <div class="mb-3">
                            <label asp-for="Password" class="form-label">Password</label>
                            <input asp-for="Password" class="form-control" />
                            <span asp-validation-for="Password" class="text-danger"></span>
                        </div>
                        
                        <div class="mb-3">
                            <label asp-for="ConfirmPassword" class="form-label">Confirm Password</label>
                            <input asp-for="ConfirmPassword" class="form-control" />
                            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                        </div>
                        
                        <div class="mb-3">
                            <label asp-for="Preferences" class="form-label">Travel Preferences (comma separated)</label>
                            <input id="preferencesInput" class="form-control" placeholder="e.g. beach, mountain, history, food" />
                            <div class="form-text">Add your interests to get better recommendations!</div>
                            <div id="preferenceTags" class="mt-2 d-flex flex-wrap gap-2"></div>
                            <input type="hidden" asp-for="Preferences" id="preferencesHidden" />
                        </div>
                        
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">Register</button>
                        </div>
                        
                        <div class="mt-3 text-center">
                            <p>Already have an account? <a asp-action="Login">Log in</a></p>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function() {
            const input = $('#preferencesInput');
            const tagsContainer = $('#preferenceTags');
            const hiddenInput = $('#preferencesHidden');
            let preferences = [];
            
            function updatePreferences() {
                tagsContainer.empty();
                preferences.forEach(pref => {
                    const tag = $(`<span class="badge bg-primary">${pref} <button type="button" class="btn-close btn-close-white" aria-label="Close"></button></span>`);
                    tag.find('.btn-close').on('click', function() {
                        preferences = preferences.filter(p => p !== pref);
                        updatePreferences();
                    });
                    tagsContainer.append(tag);
                });
                hiddenInput.val(JSON.stringify(preferences));
            }
            
            input.on('keydown', function(e) {
                if (e.key === 'Enter' || e.key === ',') {
                    e.preventDefault();
                    const value = input.val().trim();
                    if (value && !preferences.includes(value)) {
                        preferences.push(value);
                        updatePreferences();
                        input.val('');
                    }
                }
            });
        });
    </script>
}